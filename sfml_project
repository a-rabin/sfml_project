#!/bin/bash



echo '#####################################################################'
echo '#               VS Code: C/C++ Project Template'
echo '#                       [SFML Edition]'
echo '#                           v0.04'
echo '#                           ver 1'
echo '#         Original Code: Moros Smith <moros1138@gmail.com>'
echo '#  SFML Edition by AKA Rabin Studio <akarabinstudio@protonmail.com>'
echo '######################################################################'
echo ''

# find ourself so we can open ourself later
SELF="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
SELF="$SELF/sfml_project"



# if we make it here, our environment is ready!

# prompt for the project name
read -p "Project Name? (default: MyApp) " project_name

# empty, at first, to keep track of which libraries to download
project_libs=""

# prompt for SFML
read -p "Use SFML? (y/n) " temp
if [ "$temp" = "y" ]; then project_libs="${project_libs} libsfml-dev"; fi


# if the project name was left empty, use MyApp as default
if [ -z "$project_name" ]; then
	project_name=MyApp
fi

echo ''
echo -n 'Generating archive....'

# create project directory
mkdir $project_name

# move into the project directory
cd $project_name

###############################################################################
# START: LOAD THE ARCHIVE FROM THE END OF THE SCRIPT
###############################################################################
# In order to simplify the creation of the project, we have added an archive
# in base64 format at the end of this script. The following mess allows us
# to load the archive, decode it, and extract it.
###############################################################################

# This finds the line number where the base64 encoded archive lies
PAYLOAD_LINE=$(awk '/^__PAYLOAD_BEGINS__/ { print NR + 1; exit 0; }' $SELF)

# This bit does a few things in one line
#
#   1.  uses tail on this script and outputs everything past the
#       __PAYLOAD_BEGINS__ marker, which we assume is a base64
#       encoded archive file.
#
#   2.  decodes the base64 data and pipes it
#
#   3.  uses tar to unzip and extract the archive

tail -n +${PAYLOAD_LINE} $SELF | base64 --decode - | tar xz

###############################################################################
# END: LOAD THE ARCHIVE FROM THE END OF THE SCRIPT
###############################################################################

echo ' done.'
echo ''


for lib in $project_libs
do

    #SFML development libraries checker


		dpkg -s "$lib" >/dev/null 2>&1 && {
			echo -e 'SFML is installed, proceeding...\n'
		} || {
			echo 'SFML is missing, please install SFML by using the following command:'
			echo '"sudo apt install libsfml-dev"'
			echo 'Program will now be closed.'
			exit 1
		}



done

echo ''
echo -n 'String replacements....'

# string replacements
sed -i "s/{{BINARY_NAME}}/$project_name/g" Makefile
sed -i "s/{{BINARY_NAME}}/$project_name/g" .gitignore
sed -i "s/{{BINARY_NAME}}/$project_name/g" .vscode/launch.json

echo ' done.'
echo ''


# prompt for Git repository
read -p "Initialize a Git Repository? (y/n) " temp
if [ "$temp" = "y" ]; then git init &> /dev/null; git add .; git commit -m "initial commit" &> /dev/null; temp=""; fi

# prompt for opening the project in VS Code
read -p "Open project in VS Code? (y/n) " temp
if [ "$temp" = "y" ]; then code .; temp=""; fi

# navigate back to the directory we came from
cd ..

# we're done!
echo "Done!"

###############################################################################
# DO NOT EDIT BEYOND THIS POINT UNLESS YOU KNOW PRECISELY WHAT YOU ARE DOING!
###############################################################################
exit 0
__PAYLOAD_BEGINS__
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
